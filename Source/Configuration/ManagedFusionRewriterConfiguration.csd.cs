//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The ManagedFusionRewriterSectionGroup Configuration Section.
    /// </summary>
    public partial class ManagedFusionRewriterSectionGroup : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the ManagedFusionRewriterSectionGroup Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ManagedFusionRewriterSectionGroupSectionName = "managedFusion.rewriter";
        
        /// <summary>
        /// Gets the ManagedFusionRewriterSectionGroup instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public static global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup Instance
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup)(global::System.Configuration.ConfigurationManager.GetSection(global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.ManagedFusionRewriterSectionGroupSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Rules Property
        /// <summary>
        /// The XML name of the <see cref="Rules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string RulesPropertyName = "rules";
        
        /// <summary>
        /// Gets or sets the Rules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Rules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RulesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.RulesSection Rules
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RulesSection)(base[global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RulesPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RulesPropertyName] = value;
            }
        }
        #endregion
        
        #region Rewriter Property
        /// <summary>
        /// The XML name of the <see cref="Rewriter"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string RewriterPropertyName = "rewriter";
        
        /// <summary>
        /// Gets or sets the Rewriter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Rewriter.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RewriterPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.RewriterSection Rewriter
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RewriterSection)(base[global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RewriterPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ManagedFusionRewriterSectionGroup.RewriterPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The RulesSection Configuration Element.
    /// </summary>
    public partial class RulesSection : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Engine Property
        /// <summary>
        /// The XML name of the <see cref="Engine"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string EnginePropertyName = "engine";
        
        /// <summary>
        /// Gets or sets the Engine.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Engine.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RulesSection.EnginePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=RulesEngine.Apache)]
        public global::ManagedFusion.Rewriter.Configuration.RulesEngine Engine
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RulesEngine)(base[global::ManagedFusion.Rewriter.Configuration.RulesSection.EnginePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RulesSection.EnginePropertyName] = value;
            }
        }
        #endregion
        
        #region EngineType Property
        /// <summary>
        /// The XML name of the <see cref="EngineType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string EngineTypePropertyName = "engineType";
        
        /// <summary>
        /// Gets or sets the EngineType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The EngineType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RulesSection.EngineTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string EngineType
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.RulesSection.EngineTypePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RulesSection.EngineTypePropertyName] = value;
            }
        }
        #endregion
        
        #region AllowOutputProcessing Property
        /// <summary>
        /// The XML name of the <see cref="AllowOutputProcessing"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowOutputProcessingPropertyName = "allowOutputProcessing";
        
        /// <summary>
        /// Gets or sets the AllowOutputProcessing.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowOutputProcessing.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RulesSection.AllowOutputProcessingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool AllowOutputProcessing
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RulesSection.AllowOutputProcessingPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RulesSection.AllowOutputProcessingPropertyName] = value;
            }
        }
        #endregion
        
        #region Apache Property
        /// <summary>
        /// The XML name of the <see cref="Apache"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ApachePropertyName = "apache";
        
        /// <summary>
        /// Gets or sets the Apache.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Apache.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RulesSection.ApachePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.ApacheSection Apache
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.ApacheSection)(base[global::ManagedFusion.Rewriter.Configuration.RulesSection.ApachePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RulesSection.ApachePropertyName] = value;
            }
        }
        #endregion
        
        #region Microsoft Property
        /// <summary>
        /// The XML name of the <see cref="Microsoft"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string MicrosoftPropertyName = "microsoft";
        
        /// <summary>
        /// Gets or sets the Microsoft.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Microsoft.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RulesSection.MicrosoftPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.MicrosoftSection Microsoft
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.MicrosoftSection)(base[global::ManagedFusion.Rewriter.Configuration.RulesSection.MicrosoftPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RulesSection.MicrosoftPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// A collection of ApacheRuleSetItem instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::ManagedFusion.Rewriter.Configuration.ApacheSection.ApacheRuleSetItemPropertyName)]
    public partial class ApacheSection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ApacheRuleSetItemPropertyName = "ruleSet";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::ManagedFusion.Rewriter.Configuration.ApacheSection.ApacheRuleSetItemPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ManagedFusion.Rewriter.Configuration.ApacheSection.ApacheRuleSetItemPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem)(element)).ApplicationPath;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem this[int index]
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/> with the specified key.
        /// </summary>
        /// <param name="applicationPath">The key of the <see cref="global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem this[object applicationPath]
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem)(base.BaseGet(applicationPath)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DefaultFileName Property
        /// <summary>
        /// The XML name of the <see cref="DefaultFileName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string DefaultFileNamePropertyName = "defaultFileName";
        
        /// <summary>
        /// Gets or sets the DefaultFileName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultFileName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultFileNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="ManagedFusion.Rewriter.txt")]
        public string DefaultFileName
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultFileNamePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultFileNamePropertyName] = value;
            }
        }
        #endregion
        
        #region DefaultPhysicalApplicationPath Property
        /// <summary>
        /// The XML name of the <see cref="DefaultPhysicalApplicationPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string DefaultPhysicalApplicationPathPropertyName = "defaultPhysicalApplicationPath";
        
        /// <summary>
        /// Gets or sets the DefaultPhysicalApplicationPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultPhysicalApplicationPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultPhysicalApplicationPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string DefaultPhysicalApplicationPath
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultPhysicalApplicationPathPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ApacheSection.DefaultPhysicalApplicationPathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The MicrosoftSection Configuration Element.
    /// </summary>
    public partial class MicrosoftSection : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The ApacheRuleSetItem Configuration Element.
    /// </summary>
    public partial class ApacheRuleSetItem : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ApplicationPath Property
        /// <summary>
        /// The XML name of the <see cref="ApplicationPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ApplicationPathPropertyName = "applicationPath";
        
        /// <summary>
        /// Gets or sets the ApplicationPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ApplicationPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ApplicationPathPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string ApplicationPath
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ApplicationPathPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ApplicationPathPropertyName] = value;
            }
        }
        #endregion
        
        #region ConfigPath Property
        /// <summary>
        /// The XML name of the <see cref="ConfigPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ConfigPathPropertyName = "configPath";
        
        /// <summary>
        /// Gets or sets the ConfigPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ConfigPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ConfigPathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string ConfigPath
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ConfigPathPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ApacheRuleSetItem.ConfigPathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The ProxySection Configuration Element.
    /// </summary>
    public partial class ProxySection : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region UseAsyncProxy Property
        /// <summary>
        /// The XML name of the <see cref="UseAsyncProxy"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string UseAsyncProxyPropertyName = "useAsyncProxy";
        
        /// <summary>
        /// Gets or sets the UseAsyncProxy.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The UseAsyncProxy.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.UseAsyncProxyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool UseAsyncProxy
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.UseAsyncProxyPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.UseAsyncProxyPropertyName] = value;
            }
        }
        #endregion
        
        #region BufferSize Property
        /// <summary>
        /// The XML name of the <see cref="BufferSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string BufferSizePropertyName = "bufferSize";
        
        /// <summary>
        /// Gets or sets the BufferSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The BufferSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.BufferSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=4096)]
        public int BufferSize
        {
            get
            {
                return ((int)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.BufferSizePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.BufferSizePropertyName] = value;
            }
        }
        #endregion
        
        #region ResponseSize Property
        /// <summary>
        /// The XML name of the <see cref="ResponseSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ResponseSizePropertyName = "responseSize";
        
        /// <summary>
        /// Gets or sets the ResponseSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ResponseSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.ResponseSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=2048)]
        public int ResponseSize
        {
            get
            {
                return ((int)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ResponseSizePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ResponseSizePropertyName] = value;
            }
        }
        #endregion
        
        #region RequestSize Property
        /// <summary>
        /// The XML name of the <see cref="RequestSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string RequestSizePropertyName = "requestSize";
        
        /// <summary>
        /// Gets or sets the RequestSize.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RequestSize.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.RequestSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=2048)]
        public int RequestSize
        {
            get
            {
                return ((int)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.RequestSizePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.RequestSizePropertyName] = value;
            }
        }
        #endregion
        
        #region ProxyType Property
        /// <summary>
        /// The XML name of the <see cref="ProxyType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ProxyTypePropertyName = "proxyType";
        
        /// <summary>
        /// Gets or sets the ProxyType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ProxyType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="ManagedFusion.Rewriter.ProxyHandler, ManagedFusion.Rewriter")]
        public string ProxyType
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyTypePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyTypePropertyName] = value;
            }
        }
        #endregion
        
        #region ProxyAsyncType Property
        /// <summary>
        /// The XML name of the <see cref="ProxyAsyncType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ProxyAsyncTypePropertyName = "proxyAsyncType";
        
        /// <summary>
        /// Gets or sets the ProxyAsyncType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ProxyAsyncType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyAsyncTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="ManagedFusion.Rewriter.ProxyAsyncHandler, ManagedFusion.Rewriter")]
        public string ProxyAsyncType
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyAsyncTypePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.ProxySection.ProxyAsyncTypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The RewriterSection Configuration Element.
    /// </summary>
    public partial class RewriterSection : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region TraceLog Property
        /// <summary>
        /// The XML name of the <see cref="TraceLog"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string TraceLogPropertyName = "traceLog";
        
        /// <summary>
        /// Gets or sets the TraceLog.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The TraceLog.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.TraceLogPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool TraceLog
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.TraceLogPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.TraceLogPropertyName] = value;
            }
        }
        #endregion
        
        #region RebaseClientPath Property
        /// <summary>
        /// The XML name of the <see cref="RebaseClientPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string RebaseClientPathPropertyName = "rebaseClientPath";
        
        /// <summary>
        /// Gets or sets the RebaseClientPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RebaseClientPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.RebaseClientPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool RebaseClientPath
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.RebaseClientPathPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.RebaseClientPathPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowIis7TransferRequest Property
        /// <summary>
        /// The XML name of the <see cref="AllowIis7TransferRequest"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowIis7TransferRequestPropertyName = "allowIis7TransferRequest";
        
        /// <summary>
        /// Gets or sets the AllowIis7TransferRequest.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowIis7TransferRequest.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowIis7TransferRequestPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool AllowIis7TransferRequest
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowIis7TransferRequestPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowIis7TransferRequestPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowVanityHeader Property
        /// <summary>
        /// The XML name of the <see cref="AllowVanityHeader"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowVanityHeaderPropertyName = "allowVanityHeader";
        
        /// <summary>
        /// Gets or sets the AllowVanityHeader.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowVanityHeader.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowVanityHeaderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool AllowVanityHeader
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowVanityHeaderPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowVanityHeaderPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowXRewriteUrlHeader Property
        /// <summary>
        /// The XML name of the <see cref="AllowXRewriteUrlHeader"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowXRewriteUrlHeaderPropertyName = "allowXRewriteUrlHeader";
        
        /// <summary>
        /// Gets or sets the AllowXRewriteUrlHeader.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowXRewriteUrlHeader.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowXRewriteUrlHeaderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool AllowXRewriteUrlHeader
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowXRewriteUrlHeaderPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowXRewriteUrlHeaderPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowRequestHeaderAdding Property
        /// <summary>
        /// The XML name of the <see cref="AllowRequestHeaderAdding"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowRequestHeaderAddingPropertyName = "allowRequestHeaderAdding";
        
        /// <summary>
        /// Gets or sets the AllowRequestHeaderAdding.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowRequestHeaderAdding.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowRequestHeaderAddingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool AllowRequestHeaderAdding
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowRequestHeaderAddingPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowRequestHeaderAddingPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowServerVariableSetting Property
        /// <summary>
        /// The XML name of the <see cref="AllowServerVariableSetting"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string AllowServerVariableSettingPropertyName = "allowServerVariableSetting";
        
        /// <summary>
        /// Gets or sets the AllowServerVariableSetting.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AllowServerVariableSetting.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowServerVariableSettingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool AllowServerVariableSetting
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowServerVariableSettingPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.AllowServerVariableSettingPropertyName] = value;
            }
        }
        #endregion
        
        #region ModifyIIS7WorkerRequest Property
        /// <summary>
        /// The XML name of the <see cref="ModifyIIS7WorkerRequest"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ModifyIIS7WorkerRequestPropertyName = "modifyIIS7WorkerRequest";
        
        /// <summary>
        /// Gets or sets the ModifyIIS7WorkerRequest.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ModifyIIS7WorkerRequest.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModifyIIS7WorkerRequestPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public bool ModifyIIS7WorkerRequest
        {
            get
            {
                return ((bool)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModifyIIS7WorkerRequestPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModifyIIS7WorkerRequestPropertyName] = value;
            }
        }
        #endregion
        
        #region Proxy Property
        /// <summary>
        /// The XML name of the <see cref="Proxy"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ProxyPropertyName = "proxy";
        
        /// <summary>
        /// Gets or sets the Proxy.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Proxy.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.ProxyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.ProxySection Proxy
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.ProxySection)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ProxyPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ProxyPropertyName] = value;
            }
        }
        #endregion
        
        #region Modules Property
        /// <summary>
        /// The XML name of the <see cref="Modules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string ModulesPropertyName = "modules";
        
        /// <summary>
        /// Gets or sets the Modules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Modules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModulesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection Modules
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection)(base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModulesPropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterSection.ModulesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// A collection of RewriterModuleItem instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName=global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName)]
    public partial class RewriterModulesSection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string RewriterModuleItemPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ManagedFusion.Rewriter.Configuration.RewriterModulesSection.RewriterModuleItemPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem this[int index]
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem this[object name]
        {
            get
            {
                return ((global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace ManagedFusion.Rewriter.Configuration
{
    
    
    /// <summary>
    /// The RewriterModuleItem Configuration Element.
    /// </summary>
    public partial class RewriterModuleItem : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.NamePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "1.6.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public global::System.Type Type
        {
            get
            {
                return ((global::System.Type)(base[global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.TypePropertyName]));
            }
            set
            {
                base[global::ManagedFusion.Rewriter.Configuration.RewriterModuleItem.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
